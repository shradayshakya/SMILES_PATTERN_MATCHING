import org.openscience.cdk.exception.InvalidSmilesException;
import org.openscience.cdk.interfaces.IAtomContainer;
import org.openscience.cdk.isomorphism.Pattern;
import org.openscience.cdk.silent.SilentChemObjectBuilder;
import org.openscience.cdk.smarts.SmartsPattern;
import org.openscience.cdk.smiles.SmilesParser;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.stream.Collectors;


public class EntryPoint {
    public static void main(String[] args) {

        ArrayList<String> buildingBlocksFinaale = new ArrayList<>();

        buildingBlocksFinaale.add("COC(=O)C1CNCC11CN(C1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("[H][C@@]12C[C@H](N[C@]1([H])CN(C2)C(=O)OC(C)(C)C)C(=O)OC");
        buildingBlocksFinaale.add("[H][C@@]12CCN[C@@]1(CN(C2)C(=O)OC(C)(C)C)C(=O)OC");
        buildingBlocksFinaale.add("[H][C@]12CNC[C@]1(CN(C2)C(=O)OC(C)(C)C)C(=O)OC");
        buildingBlocksFinaale.add("COC(=O)[C@@H]1C[C@@H](N)CN1C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1CC2(CN1)CCN(CC2)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1CNCC11CCN(CC1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)[C@@H]1C[C@H](CN1)NC(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("[H][C@@]12CN(C[C@@]1(CCNC2)C(=O)OC)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("CCOC(=O)C1(CNC(=O)OC(C)(C)C)CCNC1");
        buildingBlocksFinaale.add("[H][C@]12CNC[C@]1(CCN(CC2)C(=O)OC(C)(C)C)C(=O)OCC");
        buildingBlocksFinaale.add("[H][C@]12CNC[C@@]1([H])N([C@@H](C2)C(=O)OC)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("[H][C@]12CNC[C@]1(CCCN2C(=O)OC(C)(C)C)C(=O)OCC");
        buildingBlocksFinaale.add("COC(=O)C1CN(CC11CNC1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1CC2(CN1C(=O)OC(C)(C)C)CCNCC2");
        buildingBlocksFinaale.add("COC(=O)C1CN(CC11CCNCC1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1=CC2=C(C=C1)N(CC21CCNCC1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("CCOC(=O)[C@H]1CNC[C@@H]1C1CN(C1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("CCOC(=O)C1(CN)CCN(C1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("[H][C@]12CC[C@@H](N)[C@@]1([H])CN([C@@H]2C(=O)OCC)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("CCOC(=O)[C@H]1CN(C[C@@H]1C2CNC2)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1=CC2=C(C=C1)C(N)CC21CCN(CC1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)[C@H](N)[C@H]1CCN(C1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)[C@@]12CCN(C[C@@H]1CNC2)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("[H][C@@]12CCN(C[C@]1([H])[C@H](N)[C@H](CO2)C(=O)OCC)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1CN(CCN1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1CNCCN1C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1(N)CCN(CC1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1(CCNCC1)NC(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1(N)CCN(C1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)CC1(N)CCN(CC1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)CC1(CCNCC1)NC(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C(N)CC1CCN(CC1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)[C@H]1C[C@H](CN)CN1C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("CCOC(=O)C1=NN2CCN(C(CN)C2=C1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("[H][C@]12CNC[C@]1(CCCN(C2)C(=O)OC(C)(C)C)C(=O)OCC");
        buildingBlocksFinaale.add("[H][C@]12CN(C[C@]1(CCCN2)C(=O)OCC)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("[H][C@]12CC[C@@H](NC(=O)OC(C)(C)C)[C@@]1([H])CN[C@@H]2C(=O)OCC");
        buildingBlocksFinaale.add("[H][C@@]12CNC[C@@]1(CCC21CCN(CC1)C(=O)OC(C)(C)C)C(=O)OC");
        buildingBlocksFinaale.add("COC(=O)C1=C(OC2CCNC2)C=C(NC(=O)OC(C)(C)C)C=C1");
        buildingBlocksFinaale.add("COC(=O)CNC1CCN(CC1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("CCOC(=O)[C@@]12CNC[C@@]1(CN(C2)C(=O)OC(C)(C)C)C(F)(F)F");
        buildingBlocksFinaale.add("COC(=O)C1CC2(CCN1)CCN(CC2)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C(CC1CCNCC1)NC(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1=C(OC2CCN(C2)C(=O)OC(C)(C)C)C=C(N)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC=C(NC(=O)OC(C)(C)C)C=C1OC1CCCNC1");
        buildingBlocksFinaale.add("[H][C@@]12CCNC[C@]1([H])[C@H](NC(=O)OC(C)(C)C)[C@H](CO2)C(=O)OCC");
        buildingBlocksFinaale.add("[H][C@]12CN(C[C@]1(CCCNC2)C(=O)OCC)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1=C(OC2CCCN(C2)C(=O)OC(C)(C)C)C=C(N)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(CN)=C(OC2CCN(C2)C(=O)OC(C)(C)C)N=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C(C)N(N=C1)C1CCNCC1");
        buildingBlocksFinaale.add("CCOC(=O)[C@@H]1[C@@H](N)COC11CN(C1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)[C@@]12CCC3(CCNCC3)[C@@H]1CN(C2)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("CCOC(=O)C1=NN2CCNC(CNC(=O)OC(C)(C)C)C2=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C(OC2CCCCN(C2)C(=O)OC(C)(C)C)C=C(N)C=C1");
        buildingBlocksFinaale.add("[H][C@@]12CN(C[C@@]1(CCNC2)C(=O)OCC)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1=CN=CC2=C1CCNC2");
        buildingBlocksFinaale.add("COC(=O)C1=CN=C2CCNCCN12");
        buildingBlocksFinaale.add("COC(=O)C1=CC(CN)=C(OC2CCCN(C2)C(=O)OC(C)(C)C)N=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C(OC2CCCCNC2)C=C(NC(=O)OC(C)(C)C)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(=CC(CN)=C1)C1CCCN(C1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1COC2(C1)CCNCC2");
        buildingBlocksFinaale.add("COC(=O)C1CCC2(C1)CCNCC2");
        buildingBlocksFinaale.add("COC(=O)C1OC2=C(C=CC=C2)C11CCNCC1");
        buildingBlocksFinaale.add("COC(=O)C1CC2CCC1N2");
        buildingBlocksFinaale.add("COC(=O)C1NC2CCC1C2");
        buildingBlocksFinaale.add("COC(=O)C1CC11CNC1");
        buildingBlocksFinaale.add("COC(=O)C1=C2CN(CCC2=NN1C1CCNC1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("CCOC(=O)[C@]12CNC[C@]1(CN(C2)C(=O)OC(C)(C)C)C1=CC=CC=C1");
        buildingBlocksFinaale.add("[H][C@@]1(C2CC(CNC2)N1C(=O)OC(C)(C)C)C(=O)OCC");
        buildingBlocksFinaale.add("COC(=O)C1=C(OC2CCNC2)C=C(CNC(=O)OC(C)(C)C)C=C1");
        buildingBlocksFinaale.add("COC(CC1=CC=CC(=C1)C(=O)OC)C1CCNCC1");
        buildingBlocksFinaale.add("COC(=O)C1=CC=C(CC(N)C2CCN(CC2)C(=O)OC(C)(C)C)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(CNC(=O)OC(C)(C)C)=C(OC2CCNC2)N=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(CNC(=O)OC(C)(C)C)=C(OC2CCCNC2)N=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(CC(N)C2CCN(CC2)C(=O)OC(C)(C)C)=CC=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C(OC2CCCN(C2)C(=O)OC(C)(C)C)C=C(CN)C=C1");
        buildingBlocksFinaale.add("[H][C@@]12CN(C[C@@]1(CCN2)C(=O)OCC)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1CN2C=CN=C2C11CCNCC1");
        buildingBlocksFinaale.add("COC(=O)C1COCCC11CNC1");
        buildingBlocksFinaale.add("COC(=O)C12CCC1CNC2");
        buildingBlocksFinaale.add("COC(CC1=CC=C(C=C1)C(=O)OC)C1CCNCC1");
        buildingBlocksFinaale.add("COC(=O)C(N)C1=CC=CC(=C1)C1CCN(CC1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1(CCCNC1)NC(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1=C2CNCCC2=NN1C1CCN(C1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)CN(C1CCNCC1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("CCOC(=O)[C@@]12CCN([C@@H]1CNC2)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)[C@@H]1CCC2(CCN(CC2)C(=O)OC(C)(C)C)[C@H]1N");
        buildingBlocksFinaale.add("COC(=O)CC1C2CCCC1CNC2");
        buildingBlocksFinaale.add("COC(=O)C1(N)CN(C1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1(N)CCCN(C1)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)[C@@H](CNC1CCCC1)NC(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C(NC(=O)OC(C)(C)C)C1=CC=CC(=C1)C1CCNCC1");
        buildingBlocksFinaale.add("CCOC(=O)[C@@H]1N[C@H]2C[C@H]1CN(C2)C(=O)OC(C)(C)C");
        buildingBlocksFinaale.add("COC(=O)C1CCC2(CNC3=CC=CC=C23)CC1");
        buildingBlocksFinaale.add("COC(=O)[C@H]1N[C@@H]2CC[C@@H]1C2");
        buildingBlocksFinaale.add("COC(=O)C1=C(OC2CCNCC2)C=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C(OC2CCNCC2)C=CC(Br)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C(OCC2CCCNC2)C=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C(OCC2CCCNC2)C=CC(Br)=C1");
        buildingBlocksFinaale.add("COC(=O)CN1N=C(C2CCNCC2)C2=C1C=CC=C2Br");
        buildingBlocksFinaale.add("COC(=O)CCC1=NC2=C(C=C(Br)C=C2)N1C1CNC1");
        buildingBlocksFinaale.add("COC(=O)[C@@H]1CN(CCN1)S(=O)(=O)C1=CC=CC=C1Br");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=CC=C1OC1CCCNC1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(NC(=O)N[C@H]2CCNC2)=CC(Br)=C1");
        buildingBlocksFinaale.add("COC(=O)c1cc(Br)cc(NC(=O)NC[C@@H]2CCNC2)c1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=CC(NC(=O)O[C@@H]2CCCNC2)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(NC(=O)O[C@H]2CCNC2)=CC(Br)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=CC(NC(=O)NC[C@H]2CCCN2)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=CC(NC(=O)N2C[C@@H]3C[C@@H]2CN3)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(NC(=O)N[C@@H]2CCNC2)=CC(Br)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=CC(NC(=O)N2CCNC(C)C2)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(NC(=O)NC[C@@H]2CCCN2)=CC(Br)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=CC(=C1)C(=O)N1CCNCC1");
        buildingBlocksFinaale.add("COC(=O)C1=C(OC2CCCNC2)C=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=CC(NC(=O)O[C@H]2CCCNC2)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C(O[C@@H]2CCNC2)C=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C(O[C@H]2CCNC2)C=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)[C@H]1CN(CCN1)S(=O)(=O)C1=CC=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(NC(=O)N2CCCNCC2)=CC(Br)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=CC(NC(=O)OCCN)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C(O[C@@H]2CC[C@H](N)CC2)C=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C(OCC2CNCCO2)C=CC(Br)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=CC(NC(=O)N2CCNCC2)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C(O[C@H]2CC[C@H](N)CC2)C=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)CCC1=NC2=C(C=CC(Br)=C2)N1C1CCCNC1");
        buildingBlocksFinaale.add("COC(=O)CCC1=NC2=C(C=C(Br)C=C2)N1C1CCCNC1");
        buildingBlocksFinaale.add("COC(=O)C1=C2CCNCCN2C(Br)=N1");
        buildingBlocksFinaale.add("COC(=O)C1(CC2=C(Br)C=CC=C2)CCNCC1");
        buildingBlocksFinaale.add("COC(=O)C1(CC2=CC(Br)=CC=C2)CCNCC1");
        buildingBlocksFinaale.add("COC(=O)C1(CC2=CC=C(Br)C=C2)CCNCC1");
        buildingBlocksFinaale.add("COC(=O)C1=C(Br)C=CC=C1CN1CCNCC1=O");
        buildingBlocksFinaale.add("COC(=O)C1=CC=C(CN2CCNCC2=O)C=C1Br");
        buildingBlocksFinaale.add("COC(=O)C1=CC(CN2CCNCC2=O)=CC(Br)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC=C(Br)C=C1CN1CCNCC1=O");
        buildingBlocksFinaale.add("COC(=O)CN1C2=C(Br)C=CC=C2OCC(N)C1=O");
        buildingBlocksFinaale.add("CCOC(=O)C1=NN(C=C(Br)C1=O)C1=CC=C(N)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=NN(C=C(Br)C1=O)C1=CC=CC(N)=C1");
        buildingBlocksFinaale.add("COC(=O)CN1N=C(C2CCNCC2)C2=CC(Br)=CC=C12");
        buildingBlocksFinaale.add("COC(=O)CN1N=C(C2CCNCC2)C2=CC=C(Br)C=C12");
        buildingBlocksFinaale.add("COC(=O)CN1N=C(C2CCNCC2)C2=CC=CC(Br)=C12");
        buildingBlocksFinaale.add("COC(=O)C1(CCNCC1)OC1=CC=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1(CCNCC1)OC1=CC=CC(Br)=C1");
        buildingBlocksFinaale.add("COC(=O)C1(CCNCC1)OC1=CC=CC=C1Br");
        buildingBlocksFinaale.add("COC(=O)C1NCCC2=C1N=C(Br)N2C");
        buildingBlocksFinaale.add("COC(=O)C1NCCC2=C1N(C)C(Br)=N2");
        buildingBlocksFinaale.add("CCOC(=O)CN1C=NC2=CC(OC3CNC3)=C(Br)C=C12");
        buildingBlocksFinaale.add("CCOC(=O)CN1C=NC2=CC(Br)=C(OC3CNC3)C=C12");
        buildingBlocksFinaale.add("CCOC(=O)CN1C=NC2=CC(Br)=C(OC3CCNC3)C=C12");
        buildingBlocksFinaale.add("CCOC(=O)CN1C=NC2=C(Br)C(OC3CCNC3)=CC=C12");
        buildingBlocksFinaale.add("CCOC(=O)CN1C=NC2=C(Br)C(OC3CNC3)=CC=C12");
        buildingBlocksFinaale.add("CCOC(=O)CN1C=NC2=CC(OC3CCNC3)=C(Br)C=C12");
        buildingBlocksFinaale.add("COC(=O)CCC1=NC2=CC(Br)=C(OC3CNC3)C=C2N1C");
        buildingBlocksFinaale.add("CCOC(=O)CN1C=NC2=CC(Br)=C(OC3CCCNC3)C=C12");
        buildingBlocksFinaale.add("CCOC(=O)CN1C=NC2=CC(OC3CCCNC3)=C(Br)C=C12");
        buildingBlocksFinaale.add("COC(=O)C1=C2ON=C(C3CCNCC3)C2=CC(Br)=C1");
        buildingBlocksFinaale.add("CC(C)(C)OC(=O)C1=C(Br)N=C(CN)S1");
        buildingBlocksFinaale.add("CCOC(=O)CN1C=NC2=C(Br)C(OC3CCCNC3)=CC=C12");
        buildingBlocksFinaale.add("COC(=O)C1=C2ON=C(C3CCNCC3)C2=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C2C(ON=C2C2CCNCC2)=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)CN1C(=O)CCC2=CC(OC3CCNC3)=C(Br)C=C12");
        buildingBlocksFinaale.add("COC(=O)C1=CC(=CC(Br)=N1)C1CCNC1");
        buildingBlocksFinaale.add("COC(=O)CN1C(=O)CCC2=CC(OC3CNC3)=C(Br)C=C12");
        buildingBlocksFinaale.add("COC(=O)CN1C(=O)CCC2=CC(OC3CNC3)=CC(Br)=C12");
        buildingBlocksFinaale.add("COC(=O)CN1C(=O)CCC2=C(Br)C(OC3CCNC3)=CC=C12");
        buildingBlocksFinaale.add("COC(=O)CN1C(=O)CCC2=CC(OC3CCNC3)=CC(Br)=C12");
        buildingBlocksFinaale.add("CN1C(CCC(=O)OC(C)(C)C)=NC2=CC(COC3CNC3)=CC(Br)=C12");
        buildingBlocksFinaale.add("COC(=O)C1(CCNCC1)N1C=C(I)C=N1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=NC(=C1)N1CCNCC1");
        buildingBlocksFinaale.add("COC(=O)C1=C(N=C(Br)C=C1)N1CCNCC1");
        buildingBlocksFinaale.add("COC(=O)C1=NC(=CC(Br)=C1)N1CCNCC1");
        buildingBlocksFinaale.add("COC(=O)C1=C2CNCCC2=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC=CC(OCC2NCCC3=CC(Br)=CC=C23)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=NC2=C1CNCC2");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=C2CCNCC2=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C2CCNCC2=CC(Br)=C1");
        buildingBlocksFinaale.add("COC(=O)CN1C(=O)CCC2=C1C=CC(Br)=C2OC1CCNC1");
        buildingBlocksFinaale.add("COC(=O)C1=CC=C(OCC2NCCC3=CC(Br)=CC=C23)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=NC(Br)=CC(=C1)N1CCNCC1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=CC(N)=C1");
        buildingBlocksFinaale.add("COC(=O)[C@@H](N)CC1=CC=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)[C@H](N)CC1=CC=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)C(C)(N)C1=CC=CC(Br)=C1");
        buildingBlocksFinaale.add("CCOC(=O)C(N)C1=CC(Br)=C(OC)C=C1");
        buildingBlocksFinaale.add("COC(=O)C[C@H](N)C1=CC(Br)=CC=C1");
        buildingBlocksFinaale.add("CCOC(=O)CC(N)C1=CC(Br)=CC=C1");
        buildingBlocksFinaale.add("COC(=O)CC(C)(N)C1=CC=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)C(N)CC1=CNC2=C1C=C(Br)C=C2");
        buildingBlocksFinaale.add("COC(=O)C(N)C1=C(Br)C=CC=C1");
        buildingBlocksFinaale.add("COC(=O)CC(N)C1=CC=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1(N)CCC2=C(C1)C=CC(Br)=C2");
        buildingBlocksFinaale.add("COC(=O)C[C@@H](N)C1=CC(I)=CC=C1");
        buildingBlocksFinaale.add("COC(=O)C(N)C1=CC=C(Br)C=C1");
        buildingBlocksFinaale.add("CCOC(=O)C[C@H](N)C1=CC=C(Br)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC=C(OCC2NCCC3=CC=C(Br)C=C23)C=C1");
        buildingBlocksFinaale.add("COC(=O)CN1C(=O)CCC2=C(Br)C=C(OC3CCNC3)C=C12");
        buildingBlocksFinaale.add("COC(=O)CN1C(=O)CCC2=C1C=C(OC1CNC1)C=C2Br");
        buildingBlocksFinaale.add("COC(=O)CN1C(=O)CCC2=C1C(OC1CCNC1)=CC=C2Br");
        buildingBlocksFinaale.add("COC(=O)CN1C(=O)CCC2=C1C(OC1CCCNC1)=CC(Br)=C2");
        buildingBlocksFinaale.add("COC[C@@H]1CNC[C@@H]1c2ccc(cc2Br)C(=O)OC");
        buildingBlocksFinaale.add("COC[C@H]1CNC[C@@H]1C1=C(Br)C=C(C=C1)C(=O)OC");
        buildingBlocksFinaale.add("CCOC(=O)C1=NN(C=CC1=O)C1=CC=C(N)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=NN(C=CC1=O)C1=CC=CC(N)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=NN(C=CC1=O)C1=CC=CC=C1N");
        buildingBlocksFinaale.add("CCOC(=O)C1CNCC2=CC=NN2C1");
        buildingBlocksFinaale.add("COC(=O)C1=C2C(ON=C2C2CCNCC2)=CC=C1");
        buildingBlocksFinaale.add("COC(=O)CN1C(=O)CCC2=CC(OC3CCNC3)=CC=C12");
        buildingBlocksFinaale.add("COC(=O)C1=NN(C(C)=CC1=O)C1=CC(N)=CC=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C2ON=C(C3CCNCC3)C2=CC=C1");
        buildingBlocksFinaale.add("COC(=O)CN1C(=O)CCC2=CC(OC3CNC3)=CC=C12");
        buildingBlocksFinaale.add("COC(=O)C1=CC(=CC=N1)C1CCNC1");
        buildingBlocksFinaale.add("COC(=O)C1=CC=C2CCNCC2=C1");
        buildingBlocksFinaale.add("COC(=O)C1=C2CNCCC2=CC=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC=NC(=C1)N1CCNCC1");
        buildingBlocksFinaale.add("COC(=O)C1=NC(=CC=C1)N1CCNCC1");
        buildingBlocksFinaale.add("COC(=O)CN1C(=O)CCC2=C1C=CC=C2OC1CCNC1");
        buildingBlocksFinaale.add("COC(=O)C1=CC=CC(OCC2NCCC3=CC(OC)=CC=C23)=C1");
        buildingBlocksFinaale.add("CCOC(=O)C1=C(C#N)C(=O)NC2=C1CNCC2");
        buildingBlocksFinaale.add("COC(=O)C1(CCNCC1)N1C=CC=N1");
        buildingBlocksFinaale.add("COC(=O)C1=CC=CC(OCC2NCCC3=CC=CC=C23)=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC=C(OCC2NCCC3=CC=CC=C23)C=C1");
        buildingBlocksFinaale.add("COC(=O)C1=CC=NC2=C1CNCC2");
        buildingBlocksFinaale.add("COC(=O)C1=NC=CC(=C1)N1CCNCC1");
        buildingBlocksFinaale.add("COC[C@@H]1CNC[C@@H]1C1=CC=C(C=C1)C(=O)OC");
        buildingBlocksFinaale.add("COC[C@H]1CNC[C@@H]1c2ccc(cc2)C(=O)OC");
        buildingBlocksFinaale.add("COC(=O)C1=C(OCC2CCCNC2)C=CC(Br)=C1");
        buildingBlocksFinaale.add("COC(=O)[C@@H]1CN(CCN1)S(=O)(=O)C1=CC=CC=C1Br");
        buildingBlocksFinaale.add("COC(=O)C1=CC(Br)=CC=C1OC1CCCNC1");
        buildingBlocksFinaale.add("COC(=O)C1=CC(NC(=O)N[C@H]2CCNC2)=CC(Br)=C1");
        buildingBlocksFinaale.add("COC(=O)C1(CCNCC1)OC1=CC=CC=C1Br");

        var methylEsterPattern = "O=COC";


        HashMap<String, Boolean> resultsEthylEster = new HashMap<>();

        buildingBlocksFinaale.stream().forEach(smiles -> resultsEthylEster.put(smiles, doesPatternExistInSMILES(smiles, methylEsterPattern)));

        var buildingBlocksNotFoundEster = buildingBlocksFinaale.stream().filter(buildingBlock -> !resultsEthylEster.get(buildingBlock)).collect(Collectors.toList());
        var buildingBlocksFoundEster = buildingBlocksFinaale.stream().filter(buildingBlock -> resultsEthylEster.get(buildingBlock)).collect(Collectors.toList());

        System.out.println("Methy Ester Not Found Start");
        System.out.println(buildingBlocksNotFoundEster);
        System.out.println("Methy Ester Not Found End");

        System.out.println();

        System.out.println("Methy Ester Found Start");
        System.out.println(buildingBlocksFoundEster);
        System.out.println("Methy Ester Found End");


        var halidePattern = "Br";

        HashMap<String, Boolean> resultsHalide = new HashMap<>();

        buildingBlocksFinaale.stream().forEach(smiles -> resultsHalide.put(smiles, doesPatternExistInSMILES(smiles, halidePattern)));

        var buildingBlocksNotFoundHalide = buildingBlocksFinaale.stream().filter(buildingBlock -> !resultsHalide.get(buildingBlock)).collect(Collectors.toList());
        var buildingBlocksFoundFoundHalide = buildingBlocksFinaale.stream().filter(buildingBlock -> resultsHalide.get(buildingBlock)).collect(Collectors.toList());


        System.out.println("Halide Not Found Start");
        System.out.println(buildingBlocksNotFoundHalide);
        System.out.println("Halide Ester Not Found End");

        System.out.println();

        System.out.println("Halide Ester Found Start");
        System.out.println(buildingBlocksFoundFoundHalide);
        System.out.println("Halide Ester Found End");
    }

    /**
     * Parses a SMILES string and returns a structure ({@link IAtomContainer}).
     *
     * @param smiles A SMILES string
     * @return A structure representing the provided SMILES
     */
    public static IAtomContainer parseSmiles(String smiles) {
        IAtomContainer molecule = null;

        try {
            SmilesParser smilesParser = new SmilesParser(SilentChemObjectBuilder.getInstance());

            molecule = smilesParser.parseSmiles(smiles);
        } catch (InvalidSmilesException ise) {
            var message = String.format("Could not parse smile string: %s", smiles);

            throw new InternalError(message);
        }

        return molecule;
    }


    public static Boolean doesPatternExistInSMILES(String smilesString, String patternString) {
        var smiles = parseSmiles(smilesString);
        Pattern pattern = SmartsPattern.create(patternString);

        if (pattern.matches(smiles)) {
            return true;
        }

        return false;
    }
}


//        ArrayList<String> buildingBlocksBoronic = new ArrayList<>();
//
//        buildingBlocksBoronic.add("CC(C)C[C@H](NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C1=CN=CC=N1)B(O)O");
//        buildingBlocksBoronic.add("CC(C)[C@H](CC(=O)OC(C)(C)C)C1=CC=C(Cl)C(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=C(C=O)C=CC=C1OCC(=O)NC1(CCCCC1)C1=NOC(CCC2=CC(Cl)=CC(Cl)=C2)=N1");
//        buildingBlocksBoronic.add("OB(O)C1=C(C=O)C(OCC(=O)NC2(CCCCC2)C2=NOC(CCC3=CC(Cl)=CC(Cl)=C3)=N2)=CC=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OCC(=O)NC2(CCCCC2)C2=NOC(CCC3=CC(Cl)=CC(Cl)=C3)=N2)C=C1C=O");
//        buildingBlocksBoronic.add("OB(O)C1=CC(OCC(=O)NC2(CCCCC2)C2=NOC(CCC3=CC(Cl)=CC(Cl)=C3)=N2)=CC=C1C=O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC=C1C(=O)CCCC(=O)NC1(CCCCC1)C1=NOC(CCC2=CC(Cl)=CC(Cl)=C2)=N1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC=C1C(=O)CCC(=O)NC1(CCCCC1)C1=NOC(CCC2=CC(Cl)=CC(Cl)=C2)=N1");
//        buildingBlocksBoronic.add("CC(=O)C1=CC=CC=C1B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC=C1C=O");
//        buildingBlocksBoronic.add("C1=CC=CC=C1C"); // Not Found
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC=C1C(=O)CCC(=O)N1CCC(CC2=C(F)C=C(C=C2)C2=CC(Cl)=CC(Cl)=C2)(CC1)C(=O)NC1CC1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC=C1C(=O)CCCC(=O)N1CCC(CC2=C(F)C=C(C=C2)C2=CC(Cl)=CC(Cl)=C2)(CC1)C(=O)NC1CC1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OCC(=O)N2CCC(CC3=C(F)C=C(C=C3)C3=CC(Cl)=CC(Cl)=C3)(CC2)C(=O)NC2CC2)C=C1C=O");
//        buildingBlocksBoronic.add("CC[C@@H]1CN(CC2=C(C)C=CC(=C2)B2OC(C)(C)C(C)(C)O2)S(=O)(=O)C2=C(O1)C=CC=C2");
//        buildingBlocksBoronic.add("C[C@@H]1CN(CC2=C(C)C=CC(=C2)B2OC(C)(C)C(C)(C)O2)S(=O)(=O)C2=C(O1)C=CC=C2");
//        buildingBlocksBoronic.add("CC(C)(C)OC(=O)C1=NC=C(Cl)C(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC(C)(C)OC(=O)N1CCC=C(C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(C)(C)OC(=O)N1CC=C(C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COCCCN1C=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COC1=CC=C2NC(=CC2=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC2=CC=CC=C2O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OCCN2C=CC=N2)C=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CC=C1)S(=O)(=O)NC1CC1");
//        buildingBlocksBoronic.add("CC1=CC=C(F)C(B(O)O)=C1F");
//        buildingBlocksBoronic.add("CN(C)C(=O)C1=CC(C)=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(=O)NC1=NC=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(=O)N1C=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(C)N1C=C2C=C(C=CC2=N1)B(O)O");
//        buildingBlocksBoronic.add("CN1C=C(C=CC1=O)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=CC(B2OC(C)(C)C(C)(C)O2)=C(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CSC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(CN2CCC2)C=C1");
//        buildingBlocksBoronic.add("COC1=CC=C(C=C1NC(C)=O)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CN=CN=C1C1CCCC1");
//        buildingBlocksBoronic.add("COCCOC1=CC(B(O)O)=C(F)C=C1F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC=C1CC(N)=O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)C(=O)NC1CCCCC1");
//        buildingBlocksBoronic.add("CC1=CC=CC(OC2=CC=C(C=N2)B(O)O)=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OCC2CC2)N=C1F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CN=C1N1CCCC1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(OCC2CC2)=C1");
//        buildingBlocksBoronic.add("CCN1C=NC2=CC(=CC=C12)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OC2=CC(F)=CC(F)=C2)C=C1");
//        buildingBlocksBoronic.add("CN1C(=O)COC2=CC=C(C=C12)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=CC=C(B(O)O)C2=CC=CN=C12");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=NN1C1CCCCO1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)C(=O)NN1C=NN=C1");
//        buildingBlocksBoronic.add("COC1=CC=CC2=C1NC(=C2)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(=O)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(=C1)C1=CN=CO1");
//        buildingBlocksBoronic.add("CC(=O)C1=CC=C(C=C1C)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN(C)C1=NC=C(B(O)O)C(OCC2=CC=CC=C2)=N1");
//        buildingBlocksBoronic.add("CN1CCN(CC1)C1=CC=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC(C)COC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CC=C1F)C(=O)NC1CC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC2=C1OC=C2");
//        buildingBlocksBoronic.add("CN1C=NC2=CC(B(O)O)=C(F)C=C12");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OC(F)(F)F)C2=NC=CC=C12");
//        buildingBlocksBoronic.add("CCC1=CC=C(OC)C(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=C2NC(=O)CC2=CC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=CC=C(C=C2N1)C(F)(F)F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(=CC=C1)S(N)(=O)=O");
//        buildingBlocksBoronic.add("COCN1N=CC2=CC=C(C=C12)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(OCC2=CC=CC=N2)=C1");
//        buildingBlocksBoronic.add("CN1C=NC2=CC=C(C=C12)B(O)O");
//        buildingBlocksBoronic.add("CC(C)COC1=CC=C2C=C(C=CC2=C1)B(O)O");
//        buildingBlocksBoronic.add("CN1N=C(B2OC(C)(C)C(C)(C)O2)C2=CC=CC=C12");
//        buildingBlocksBoronic.add("CC(C)CCOC1=CC(B(O)O)=C(F)C=C1F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)C1=NN=CN1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(N=C1)C(F)F");
//        buildingBlocksBoronic.add("CC(C)CS(=O)(=O)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OCC2CCOCC2)C=C1");
//        buildingBlocksBoronic.add("COC1=CC(OC(F)(F)F)=CC(B(O)O)=C1F");
//        buildingBlocksBoronic.add("CC(=O)NC1=CC=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN1CCN(CC2=CC=CC(=C2)B2OC(C)(C)C(C)(C)O2)CC1");
//        buildingBlocksBoronic.add("CC1=CC=CC(F)=C1B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(CC(=O)NC2CC2)C=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C(S1)N1CCCCC1");
//        buildingBlocksBoronic.add("CCC1=CC=C(F)C(=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC(O)=CC=C1OC(F)(F)F");
//        buildingBlocksBoronic.add("CC(C)NC(=O)CC1=CC=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)C1=CC=CS1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CNC2=NC=CC=C12");
//        buildingBlocksBoronic.add("OCC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("COC1=CC(F)=C(C=C1OC)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COC1=CC=C(C=C1NS(C)(=O)=O)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(C)OC1=CC=C2C=C(C=CC2=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1=CC(=CC=C1B(O)O)S(C)(=O)=O");
//        buildingBlocksBoronic.add("CCOC1=CC=C(F)C=C1B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC=C1CS(C)(=O)=O");
//        buildingBlocksBoronic.add("CC1=NC2=CC(=CC=C2N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COC1=CC(B(O)O)=C(F)C=C1F");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(=C1)C1=CCCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(CS(C)(=O)=O)=CC=C1");
//        buildingBlocksBoronic.add("CCN1N=C(C=C1B(O)O)C(F)(F)F");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(=C1)C1=CC=CC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C(NS(C)(=O)=O)N=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC(CC2=CC=CC=C2)=C1");
//        buildingBlocksBoronic.add("CC1=CC(OC(F)(F)F)=CC=C1B(O)O");
//        buildingBlocksBoronic.add("CN1N=C(B2OC(C)(C)C(C)(C)O2)C2=CC(F)=CC=C12");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)C1=CNN=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC2=C1SC=C2");
//        buildingBlocksBoronic.add("CC(=O)NCCC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CN1CCN(CC2=CC=C(S2)B2OC(C)(C)C(C)(C)O2)CC1");
//        buildingBlocksBoronic.add("CC1=NC=C(S1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(C)N1N=C(C=C1B(O)O)C(F)(F)F");
//        buildingBlocksBoronic.add("CC(=O)C1=CC=C(B(O)O)C(C)=C1");
//        buildingBlocksBoronic.add("COC1=CC=C(OC)C(=C1)B(O)O");
//        buildingBlocksBoronic.add("COCCOC1=CC=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(=O)N1C=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C2C=CC=NC2=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CC=C1)C(=O)C1CC1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(=C1)C1=NNC=C1");
//        buildingBlocksBoronic.add("CC(C)COC1=CC=CC(B(O)O)=C1F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=C(F)C=C2OCC(=O)NC2=C1");
//        buildingBlocksBoronic.add("CN(C)C(=O)CC1=CC=C(C=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C2N=NNC2=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CNC=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=C2N=CC=CC2=C1)C(F)(F)F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=NSN=C2C=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(=C1)S(=O)(=O)C1CC1");
//        buildingBlocksBoronic.add("OCCCC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1=NN=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC2=C(C=CC=C2)N=C1F");
//        buildingBlocksBoronic.add("OB(O)C1=CN=CC=N1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(N=C1)C1CCCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(NS(C)(=O)=O)=CN=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CN=C(OCC(F)(F)F)N=C1");
//        buildingBlocksBoronic.add("CC1=CC2=NC=CN2C=C1B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)C(=O)N1CCOCC1");
//        buildingBlocksBoronic.add("COC1=CC=C(C=C1B(O)O)C1=CC=NC=C1");
//        buildingBlocksBoronic.add("COCCC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)C(=O)NC1CCCC1");
//        buildingBlocksBoronic.add("CN(C)S(=O)(=O)C1=CC=C(B(O)O)C(C)=C1");
//        buildingBlocksBoronic.add("CC1=NC2=CC=C(C=C2S1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(C)OC1=CN=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C2C=C(O)C=CC2=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(=C1)C1=NNN=N1");
//        buildingBlocksBoronic.add("CN1C=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=C(NC=C2)N=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=C(NC=C2)N=C1");
//        buildingBlocksBoronic.add("CNC(=O)CC1=CC(=CC=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COC1=CC(=CC=C1S(C)(=O)=O)B(O)O");
//        buildingBlocksBoronic.add("CC(C)C1=CC=C(F)C(=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CN=C(N=C1)C1CC1");
//        buildingBlocksBoronic.add("CN1CCN(CC1)C1=CC(=CC=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(=O)NC1=CC=C(F)C=C1B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=NC(=NO1)C1=CC(=CC=C1)B(O)O");
//        buildingBlocksBoronic.add("CN(C)CCNC(=O)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CC(C)OC1=CC=C(C=C1B(O)O)C(F)(F)F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)C1=NN=CO1");
//        buildingBlocksBoronic.add("CS(=O)(=O)C1=CN=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("COC1=CC(C)=C(C=N1)B(O)O");
//        buildingBlocksBoronic.add("COC1=C(C)C=C(C=N1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC=C1C1=NNN=N1");
//        buildingBlocksBoronic.add("OB(O)C1=NC=CN1");
//        buildingBlocksBoronic.add("OB(O)C1=CC2=CC=CC=C2C1");
//        buildingBlocksBoronic.add("CC1=NC2=C(C=C1)C=CC(F)=C2B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(=C1)N1C=CC=N1");
//        buildingBlocksBoronic.add("CC(N(C)C)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1=NN(C(C)=C1)C1=CC(=CC=C1)B(O)O");
//        buildingBlocksBoronic.add("CN(C)S(=O)(=O)C1=CC(=CC=C1)B(O)O");
//        buildingBlocksBoronic.add("CC(=O)NCC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(CN2CCOCC2)S1");
//        buildingBlocksBoronic.add("CCS(=O)(=O)C1=CC=C(C=N1)B(O)O");
//        buildingBlocksBoronic.add("CC1=CC=C(N=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2NC(=O)CCC2=C1");
//        buildingBlocksBoronic.add("CC(C)CNC(=O)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CS(=O)C1=CC(=CC=C1)B(O)O");
//        buildingBlocksBoronic.add("CN(C)C1=CN=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CN(C)C1=CN=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)C1CCCCC1");
//        buildingBlocksBoronic.add("CN(C)S(=O)(=O)C1=CC=C(C)C(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)C(=O)NCC1=CC=CO1");
//        buildingBlocksBoronic.add("CN(C)C(=O)C1=CC(F)=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CN=C(N=C1)N1C=CC=N1");
//        buildingBlocksBoronic.add("CCS(=O)(=O)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(O)N=C1");
//        buildingBlocksBoronic.add("CN1CCN(CC1)C(=O)C1=CC=C(C=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN(C)S(=O)(=O)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2OCCOC2=N1");
//        buildingBlocksBoronic.add("COC1=NC(=CC=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN1N=C(C=C1C)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=NC(C)=C(S1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=C(C=CC2=NN=NN12)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CN2N=NN=C12");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OCC(F)(F)F)N=C1");
//        buildingBlocksBoronic.add("CC(C)OC1=C(C)C=C(C=N1)B(O)O");
//        buildingBlocksBoronic.add("CC1=NC2=CC=C(C=C2C=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(F)C(=C1)C1=NN=NN1");
//        buildingBlocksBoronic.add("CN(C)CC1=CC=CC=C1B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CN1C1=CC=CC=C1");
//        buildingBlocksBoronic.add("CN1C=C(B2OC(C)(C)C(C)(C)O2)C(C)=N1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=NON=C2N=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2OC=NC2=C1");
//        buildingBlocksBoronic.add("CN(CCO)CC1=CC=C(C=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN(C)C(=O)C1=CC=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(OC(F)F)C=C1F");
//        buildingBlocksBoronic.add("CC(=O)NC1=NC2=CC=C(C=C2S1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COCN1C=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2C=CN=C(O)C2=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2NC(=O)COC2=C1");
//        buildingBlocksBoronic.add("CC1=NOC2=C1C(=CC=C2)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=CO1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CSN=C1");
//        buildingBlocksBoronic.add("CN1C=C(B2OC(C)(C)C(C)(C)O2)C(=N1)C1CC1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)C1=C(O)N=C(O)N1");
//        buildingBlocksBoronic.add("CC1=CC(B(O)O)=C(C)S1");
//        buildingBlocksBoronic.add("COC1=NC2=C(C=CC=C2)C=C1B(O)O");
//        buildingBlocksBoronic.add("COC1=CC=C(S1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN1N=C(C=C1B(O)O)C(F)(F)F");
//        buildingBlocksBoronic.add("CC(C)=CB(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=CC(OC(F)F)=C1");
//        buildingBlocksBoronic.add("CC1=CC(=CN=C1F)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C2C=CNC2=C1");
//        buildingBlocksBoronic.add("CC1=CC=C(C=N1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C2C=NC=CC2=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OC2CCCCO2)C=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CN=C2C=CC=CC2=C1");
//        buildingBlocksBoronic.add("CC1=CC=C2NN=CC2=C1B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(N=C1)C1CCCCO1");
//        buildingBlocksBoronic.add("COC1=CC=C(B(O)O)C(F)=C1");
//        buildingBlocksBoronic.add("CC(C)OC1=CC(F)=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=NC2=CC=CC=C12");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2CNC(=O)C2=C1");
//        buildingBlocksBoronic.add("COC1=CC=C(F)C(=C1)B(O)O");
//        buildingBlocksBoronic.add("COC1=CC=C(C=C1F)B(O)O");
//        buildingBlocksBoronic.add("COC1=CC=C(C=C1C)B(O)O");
//        buildingBlocksBoronic.add("CC1=C(SC=C1)B(O)O");
//        buildingBlocksBoronic.add("COC1=CC=C(OC(F)(F)F)C=C1B(O)O");
//        buildingBlocksBoronic.add("CCOC1=NC=CC=C1B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CCC(C)(C)CC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)C(=O)C(F)(F)F");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC2=C1NN=C2");
//        buildingBlocksBoronic.add("CC(C)OC1=CC(=CN=C1F)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(F)=CC=C1C#N");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC2=CC=NC=C12");
//        buildingBlocksBoronic.add("COC1=CC=NC=C1B(O)O");
//        buildingBlocksBoronic.add("CN1C=C2C=CC(=CC2=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN1C=CC2=CC(=CC=C12)B(O)O");
//        buildingBlocksBoronic.add("CN(C)CC1=CC=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN1CC2=CC=C(C=C2C1=O)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=CC=C(C=C1C)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC2=CN=CC=C12");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C(F)=C1)C(F)(F)F");
//        buildingBlocksBoronic.add("COC1=NC=C(C=C1C(F)(F)F)B(O)O");
//        buildingBlocksBoronic.add("CN1N=CC2=C1C=C(C)C(=C2)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=NN1");
//        buildingBlocksBoronic.add("CC(C)C1=CC=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CN(C)C1=NC=C(C=N1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(F)C(=C1)C#N");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C#N)C(=C1)C(F)(F)F");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CC=C1F)C(=O)N1CCCC1");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CC=C1F)C(=O)N1CCCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(=O)CC(C)(C)C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2N=CC=NC2=C1");
//        buildingBlocksBoronic.add("COC1=CC(B(O)O)=C(OC)C=N1");
//        buildingBlocksBoronic.add("CC1=CC(=CC(C)=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OCC2=CC=CC=C2)C=C1");
//        buildingBlocksBoronic.add("CC1=CC(=NC=C1B1OC(C)(C)C(C)(C)O1)C#N");
//        buildingBlocksBoronic.add("CC1=CN=C(F)C(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=NNC2=CC(=CC=C12)B(O)O");
//        buildingBlocksBoronic.add("CN1N=CC2=C1C(C)=CC(=C2)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(N=C1)C#N");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(=CC=C1)S(=O)(=O)N1CCCC1");
//        buildingBlocksBoronic.add("CN1CCN(CC1)C1=NC=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN(C)CC1=CC=C(C=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CNC(=O)C1=CC=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=CC=C(B(O)O)C(C)=N1");
//        buildingBlocksBoronic.add("CCN1N=CC=C1B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=NNC2=CC=C(C=C12)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=C(F)C(=CC=C1)C#N");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(F)N=C1F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC2=C1C=CS2");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2C(=O)NCCC2=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CON=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CCCCCC1");
//        buildingBlocksBoronic.add("COC1=CC=C(C=C1B1OC(C)(C)C(C)(C)O1)C#N");
//        buildingBlocksBoronic.add("OB(O)C1=CC(F)=CC(F)=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CC=C1F)C(F)(F)F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(N=C1)C1CCOCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(=CC=C1)S(=O)(=O)N1CCCCC1");
//        buildingBlocksBoronic.add("CN1CC2=CC(=CC=C2C1=O)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=NC(F)=C1");
//        buildingBlocksBoronic.add("CCC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(CC2=CC=CC=C2)N=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(=CN=C1)C(=O)N1CCOCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(=CN=C1)C(=O)N1CCOCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(=CN=C1)C(=O)N1CCOCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(=CN=C1)C(=O)N1CCOCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C(C#N)C(F)=C1");
//        buildingBlocksBoronic.add("CC1=NC=CC=C1B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=NC=C1F");
//        buildingBlocksBoronic.add("COC1=NC=C(C=N1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC2=C1C=NN2");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(OC(F)F)C=C1");
//        buildingBlocksBoronic.add("CC1=CSC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)S(=O)(=O)N1CCOCC1");
//        buildingBlocksBoronic.add("CC1=CC(=CC=C1C(F)(F)F)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(CN2CCOCC2)C=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CN=CC2=CC=CC=C12");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(F)N=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC2=C1NC=C2");
//        buildingBlocksBoronic.add("COC1=CC=C(C=C1B(O)O)C(F)(F)F");
//        buildingBlocksBoronic.add("CC1=CC(=CC=C1B(O)O)C(F)(F)F");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC=C1OCC1=CC=CC=C1");
//        buildingBlocksBoronic.add("CN1N=CC2=CC=C(C=C12)B(O)O");
//        buildingBlocksBoronic.add("CN(C)C1=CC=C(C=C1C)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1C#N)C(F)(F)F");
//        buildingBlocksBoronic.add("CC1=C(C=CN=C1F)B(O)O");
//        buildingBlocksBoronic.add("CC1=CC(=CN=C1C#N)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=CC=C(B(O)O)C2=CC=CC=C12");
//        buildingBlocksBoronic.add("CC1=CC(F)=NC=C1B(O)O");
//        buildingBlocksBoronic.add("COC1=CC=C(C=C1OC)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C(N=C1)N1CCOCC1");
//        buildingBlocksBoronic.add("OB(O)C1=COC=C1");
//        buildingBlocksBoronic.add("CS(=O)(=O)C1=CC=CC=C1B(O)O");
//        buildingBlocksBoronic.add("COC1=NC=C(B(O)O)C(OC)=N1");
//        buildingBlocksBoronic.add("OB(O)C1=CC(F)=CC(OC(F)F)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(CC#N)=CC=C1");
//        buildingBlocksBoronic.add("COC1=CC=C(B(O)O)C(OC)=N1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(F)C=C1F");
//        buildingBlocksBoronic.add("COC1=CC(B(O)O)=C(F)C=N1");
//        buildingBlocksBoronic.add("CS(=O)(=O)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1=CC=C(F)C=C1B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2SC=NC2=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC2=CC=CC=C2S1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1F)C(F)(F)F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(F)C=C1C#N");
//        buildingBlocksBoronic.add("COC1=CC(F)=CC=C1B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CN=C1)C#N");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(=CC=C1)C(=O)C(F)(F)F");
//        buildingBlocksBoronic.add("CN(C)C1=NC=C(C=C1F)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN1CCN(CC1)S(=O)(=O)C1=CC=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=C(B2OC(C)(C)C(C)(C)O2)C(C)=NO1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C2NN=CC2=C1");
//        buildingBlocksBoronic.add("CN(C)C(=O)C1=CC=CC=C1B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(=O)C1=CC=C(O1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2C(=O)NCC2=C1");
//        buildingBlocksBoronic.add("COCC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CCOC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CCCCO1");
//        buildingBlocksBoronic.add("CC1=CC(=CN=C1N1CCOCC1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC(F)=CC=C1F");
//        buildingBlocksBoronic.add("COC1=CC=C(C=C1B(O)O)C(C)=O");
//        buildingBlocksBoronic.add("CC1=NC=C(C=N1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2OC=CC(=O)C2=C1");
//        buildingBlocksBoronic.add("CN1C(=O)CC2=CC(=CC=C12)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=CC2=C(C=NN2)C=C1B(O)O");
//        buildingBlocksBoronic.add("CC1=CC=C(B(O)O)C(F)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2NC(=O)CC2=C1");
//        buildingBlocksBoronic.add("COC1=CC(=CN=C1F)B(O)O");
//        buildingBlocksBoronic.add("CN(C)C(=O)C1=CC=C(C=C1F)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)S(=O)(=O)N1CCCCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC(F)=C1C#N");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CCC(F)(F)CC1");
//        buildingBlocksBoronic.add("CC1=CC2=C(NN=C2)C=C1B(O)O");
//        buildingBlocksBoronic.add("COC1=CC(=CC=N1)B(O)O");
//        buildingBlocksBoronic.add("CN1N=CC2=C1C=C(B(O)O)C(C)=C2");
//        buildingBlocksBoronic.add("COC1=CC2=C(C=NN2)C=C1B(O)O");
//        buildingBlocksBoronic.add("CN(C)C(=O)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CC(C)OC1=NC=CC=C1B(O)O");
//        buildingBlocksBoronic.add("CN1N=CC(B2OC(C)(C)C(C)(C)O2)=C1C");
//        buildingBlocksBoronic.add("CN1C=C(B(O)O)C(=N1)C(F)(F)F");
//        buildingBlocksBoronic.add("CN1N=CC=C1B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(OC(F)F)N=C1");
//        buildingBlocksBoronic.add("COC1=CC2=CC=C(C=C2C=N1)B(O)O");
//        buildingBlocksBoronic.add("COC1=CC=C2C=C(C=CC2=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)S(=O)(=O)N1CCCC1");
//        buildingBlocksBoronic.add("CN1CC2=C(C=CC=C2C1=O)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COC1=CN=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(C)(C)OCC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CCC1=CC=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("COC1=NC=C(F)C=C1B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COC1=NC=C(F)C=C1B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC=C1O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC=C1C#N");
//        buildingBlocksBoronic.add("CC1=CC(=CC(C)=C1)B(O)O");
//        buildingBlocksBoronic.add("CN(C)C1=CC=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CN(C)C1=CC=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC(C)OC1=CC=C(C=N1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=C2CNC(=O)C2=CC=C1");
//        buildingBlocksBoronic.add("CC1=C(C=CC2=C1C=NN2)B(O)O");
//        buildingBlocksBoronic.add("CC(=O)C1=CN=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(CC#N)C=C1");
//        buildingBlocksBoronic.add("COCC1=CC=CC=C1B(O)O");
//        buildingBlocksBoronic.add("CCO\\C=C\\B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC(=C1)N1CCOCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC=C1CN1CCOCC1");
//        buildingBlocksBoronic.add("CC1=CC=C(C)C(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC(C)OC1=CC=CC=C1B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC=C1C1=CC=CC=C1");
//        buildingBlocksBoronic.add("COC1=CC=C(C=N1)B(O)O");
//        buildingBlocksBoronic.add("CN(C)C(=O)C1=CC=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("NC(=O)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CN1N=CC2=C1C=CC(B(O)O)=C2C");
//        buildingBlocksBoronic.add("COC1=CC(F)=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CC=C1F)C#N");
//        buildingBlocksBoronic.add("CC(C)(C)OCC1=CC=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OC2=CC=CC=C2)C=C1");
//        buildingBlocksBoronic.add("CC1=CC(=CC=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C(N=C1)N1CCCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(CCS(C)(=O)=O)N=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(CC2COC2)N=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=C2C=CC=CN2N=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(CCN2CCCC2=O)N=C1");
//        buildingBlocksBoronic.add("OB(O)C1=C2C=CNC2=CN=C1");
//        buildingBlocksBoronic.add("CN1N=C(C)C=C1B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=C2N=CC=CN2N=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(CC2CCC2)N=C1");
//        buildingBlocksBoronic.add("CN1C=C(B2OC(C)(C)C(C)(C)O2)C2=C1C=NC=C2");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(CS(C)(=O)=O)N=C1");
//        buildingBlocksBoronic.add("CC1=CC2=C(C=CC=C2N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN1N=CC2=CC(=CN=C12)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C(C=C1)S(C)(=O)=O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2ON=CC2=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=C2CCCN2N=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=NN1C1COC1");
//        buildingBlocksBoronic.add("CN1C=C(B2OC(C)(C)C(C)(C)O2)C2=C1N=CC=C2");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(N=C1)S(C)(=O)=O");
//        buildingBlocksBoronic.add("CN(C)CCN1C=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN(C)CCCN1C=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(=O)CC1");
//        buildingBlocksBoronic.add("CN1N=C2C=C(C=CC2=C1C)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(=CC2=C1C=CN2)C(F)(F)F");
//        buildingBlocksBoronic.add("OB(O)C1=C(F)N=CC=C1");
//        buildingBlocksBoronic.add("CN(C)CCC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=C(F)N=C(O)C=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CO1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CO1");
//        buildingBlocksBoronic.add("OB(O)C1=CC2=C(CCC2)C=C1");
//        buildingBlocksBoronic.add("CC1=C(O)N=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC(F)=CN=C1");
//        buildingBlocksBoronic.add("CC1=CC(=CS1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=C(CN2CCCCC2)C=CC=C1");
//        buildingBlocksBoronic.add("CC(C)CCOC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CC=C1)C1CCC1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC2=NON=C12");
//        buildingBlocksBoronic.add("COCCOC1=CC2=C(C=C1)C=C(C=C2)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC(OC2CCCC2)=CC=C1");
//        buildingBlocksBoronic.add("OB(O)C1=C(OCC2CCOC2)C=CC=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OC2CCCCC2)C=C1");
//        buildingBlocksBoronic.add("OB(O)C1=C(OCC2=CC=NC=C2)C=CC(F)=C1");
//        buildingBlocksBoronic.add("CN(C)CC1=C(F)C=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=C2CCCCC2=CC=C1");
//        buildingBlocksBoronic.add("COC1=CC(CN(C)C)=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CC(C)OC1=NC=C(S1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COC1=NC=C(S1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CN=C(O)N=C1");
//        buildingBlocksBoronic.add("CN1N=CC2=C(C=CC=C12)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C2NN=CC2=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2NC(=O)NC2=C1");
//        buildingBlocksBoronic.add("CN1C=C2C=C(C=CC2=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OCCNS(=O)(=O)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)C(=O)N1CCCCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)C1=CC=CO1");
//        buildingBlocksBoronic.add("CNS(=O)(=O)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(CC2=CC=CS2)C=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC=N1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2OC=CC2=C1");
//        buildingBlocksBoronic.add("CN1N=CC2=CC(F)=C(C=C12)B(O)O");
//        buildingBlocksBoronic.add("CC1=CC=NC=C1B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CC=C1)S(=O)(=O)N1CCOCC1");
//        buildingBlocksBoronic.add("CN(C)C1=CC=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)C1CCCC1");
//        buildingBlocksBoronic.add("CC1=NN=C(O1)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CN1C=CC2=CC=C(C=C12)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=NC=CS1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(OCCN2CCCCC2)C=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=NC(=C1)C(F)(F)F");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(OC(F)F)=C1");
//        buildingBlocksBoronic.add("CN(C)CCOC1=CC=C(C=N1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)C(=O)N1CCC(=O)CC1");
//        buildingBlocksBoronic.add("CN1CCOC2=CC(=CN=C12)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)C(=O)N1CCCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(OC2CCOCC2)N=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=NC=N1");
//        buildingBlocksBoronic.add("CC1=NNC=C1B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN1N=CC2=CC(=CC=C12)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC2=C(C=NN2)C=C1F");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC=C1C1CC1");
//        buildingBlocksBoronic.add("CN1C=CC=C1B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CS(=O)(=O)C1=CC=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC(=C1)N1CCCCC1");
//        buildingBlocksBoronic.add("CC(=O)NS(=O)(=O)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CN1CCC(=CC1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=COC(=N1)C1=CC=CC=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(=C1)C(F)F");
//        buildingBlocksBoronic.add("CN(C)C(=O)C1=CC(=CC=C1F)B(O)O");
//        buildingBlocksBoronic.add("CC1=CC=C(O1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C2N=CC=CC2=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)S(=O)(=O)N1C=CC=C1");
//        buildingBlocksBoronic.add("CC(C)CC1=C(C=CC=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(CCN2CCOCC2)=CC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(CS(N)(=O)=O)C=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=C(CN2C=CN=C2)C=CC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=C(C=C1)C(=O)CC2");
//        buildingBlocksBoronic.add("COC1=NC=C(C=C1NS(C)(=O)=O)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(=O)C1=NC=C(S1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=NNC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C(S1)C1=CC=CC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(N=C1)C1CCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC2=CC(=O)N=C12");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(=CC=C1)C1=NC=CN1");
//        buildingBlocksBoronic.add("COCCC1=CC=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN1C=C(B2OC(C)(C)C(C)(C)O2)C2=C1C=CC=C2");
//        buildingBlocksBoronic.add("CC1=C(C=CC(OC(F)F)=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(C)C1=CC2=C(SC(=C2)B2OC(C)(C)C(C)(C)O2)C=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=CC(NS(=O)(=O)C2=CC=CC=C2)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=C(C=CS2)C=C1");
//        buildingBlocksBoronic.add("CN1C(C)=NC2=C1C=CC(=C2)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=C2OC=NC2=CC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=C2OC=NC2=CC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(=NN1)C(F)(F)F");
//        buildingBlocksBoronic.add("COCC1=CC(=CS1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(OCCS(C)(=O)=O)C=C1");
//        buildingBlocksBoronic.add("CC1=NC=C(O1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OC2=NC=CC=N2)C=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)N1CCCS1(=O)=O");
//        buildingBlocksBoronic.add("COC1=CN=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("COCN1C=C(B(O)O)C(=N1)C(F)(F)F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(OC2CC2)=CC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C(C=C1)C(=O)N1CCOCC1");
//        buildingBlocksBoronic.add("COC1=CC(=NC=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COC1=CSC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=CC(CN2CCOCC2)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CNC2=C1C=C(C=N2)C(F)(F)F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=NC(O)=CC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(NC(=O)N2CCCCC2)=CC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CNC2=C1C=C(F)C=N2");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(C=C1)S(C)(=O)=O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C2CCCC2=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(C=C1)C(=O)C1=CC=CC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C(C=C1)C1=CC=C(F)C=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(CCO)N=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=C2C=CNC2=NC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN2N=CC=C2N=C1");
//        buildingBlocksBoronic.add("COCCNC(=O)C1=CC=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)C1(O)CCOCC1");
//        buildingBlocksBoronic.add("CC1=CC(=CN=C1C)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CN=C2C(F)=CC=CC2=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(COC2=CC=CC=C2)=CC=C1");
//        buildingBlocksBoronic.add("OB(O)C1=C(F)C=NC(F)=C1");
//        buildingBlocksBoronic.add("OB(O)C1=C(F)C=NC(F)=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CN=C(OC(F)(F)F)C=C1");
//        buildingBlocksBoronic.add("CN1C=CC(=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=NC(OCC2=CC=CC=C2)=CC=C1");
//        buildingBlocksBoronic.add("COC1=CC(B(O)O)=C(C)C=C1");
//        buildingBlocksBoronic.add("COC1=CC(B(O)O)=C2C=CC=CC2=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CN=C(C=C1)C1CC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=CC(OCC2=CC=CC=C2)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=CC(=C1)C(F)(F)F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=CC(OC2=CC=CC=C2)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=CC(OC2=CC=CC=C2)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=C(SC=C2)C=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C(O)C(F)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C2SC=CC2=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C2SC=CC2=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)C(F)F");
//        buildingBlocksBoronic.add("OB(O)C1=CN=C(N=C1)N1CCC1");
//        buildingBlocksBoronic.add("CN1C=NC2=C1C=CC(=C2)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN2C=NN=C2C=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(N=C1)C1CCCCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN2N=CN=C2C=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=C(C=C1)N=CN=C2");
//        buildingBlocksBoronic.add("CS(=O)(=O)C1=CC(F)=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(O)=NC=C1");
//        buildingBlocksBoronic.add("OB(O)C1=C2OCCOC2=CC=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CN=CC(=C1)N1CCCC1");
//        buildingBlocksBoronic.add("COC1=C(C=CC(OC(F)(F)F)=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC2=C(S1)C=CC(F)=C2");
//        buildingBlocksBoronic.add("CC1=CC(=NN1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=C(OCC(=O)N2)C=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC2=C(CCO2)C=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(CN2CCS(=O)(=O)CC2)C=C1");
//        buildingBlocksBoronic.add("CN1C=C2C=C(C=NC2=N1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=C2C=NNC2=CC(=C1)C(F)(F)F");
//        buildingBlocksBoronic.add("CC1=CC=C(C=C1CN1CCOC2=CC=CC=C2S1(=O)=O)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC2=C(C=C1)N=CN2");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(CC2CCCCC2)C=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2N(C=CC2=C1)S(C)(=O)=O");
//        buildingBlocksBoronic.add("COC1=CC=C(B2OC(C)(C)C(C)(C)O2)C2=C1NC=C2");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=N1)C(F)(F)F");
//        buildingBlocksBoronic.add("COCC1=CC(=CC=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OCCN2C=CN=C2)C=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OCC2=CC=CC=C2)C(F)=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OCC2CC2)N=C1");
//        buildingBlocksBoronic.add("CC1=CC=C(C=C1C#N)B(O)O");
//        buildingBlocksBoronic.add("CN1C=NC2=C1N=CC(=C2)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(S1)C#N");
//        buildingBlocksBoronic.add("OB(O)C1=CSC2=CC=CC=C12");
//        buildingBlocksBoronic.add("CC(C)(C#N)C1=CC(=CC=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(N=C1)C(F)(F)F");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1F)C#N");
//        buildingBlocksBoronic.add("CC(C)(C#N)C1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C#N)C(F)=C1");
//        buildingBlocksBoronic.add("CC1=CC=C(C=C1B(O)O)S(=O)(=O)N1CCCCC1");
//        buildingBlocksBoronic.add("CCN1C=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COCCOC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C2C=CC=CC2=C1");
//        buildingBlocksBoronic.add("CC1=CC=C(C=C1B(O)O)S(=O)(=O)N1CCOCC1");
//        buildingBlocksBoronic.add("CC(=O)C1=CC(=CC=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1=C(SC(=C1)B(O)O)C#N");
//        buildingBlocksBoronic.add("CCS(=O)(=O)C1=CC(=CC=C1)B(O)O");
//        buildingBlocksBoronic.add("COC1=CC=C(F)C=C1B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CN=C1C#N");
//        buildingBlocksBoronic.add("CC1=CN=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC2=CC(=CC=C2N1)C#N");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(S1)C1=CC=CC=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(=C1)C(=O)NCCC#N");
//        buildingBlocksBoronic.add("CC1=CC=C(C=C1B(O)O)C#N");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=C(N=C1)C#N");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CC(F)=C1)C#N");
//        buildingBlocksBoronic.add("OCC1=CC=C(F)C=C1B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)S(N)(=O)=O");
//        buildingBlocksBoronic.add("CC1=NC(F)=CC=C1B(O)O");
//        buildingBlocksBoronic.add("CN1C=CC2=C1C=CC=C2B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OCC#N)C=C1");
//        buildingBlocksBoronic.add("COC1=CC=C(B(O)O)C(C)=C1");
//        buildingBlocksBoronic.add("CC(C)OC1=CC=C(C=C1F)B(O)O");
//        buildingBlocksBoronic.add("CC(=O)C1=CC=C(S1)B(O)O");
//        buildingBlocksBoronic.add("CC1=CC=C(C=C1OCC1=CC=CC=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC(OCC#N)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC=C1OCC#N");
//        buildingBlocksBoronic.add("CC1=CN=C(C)C(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1=NN=C(O1)C1=CC(=CC=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OCC2=CC=CC=C2)N=C1");
//        buildingBlocksBoronic.add("CC1=CC(=CC=C1B(O)O)C#N");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CC=N1)C#N");
//        buildingBlocksBoronic.add("CS(=O)(=O)C1=CC=C(C=C1F)B(O)O");
//        buildingBlocksBoronic.add("CN(C)C(=O)CC1=CC(=CC=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CCN1C=C(C=CC1=O)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=C(C=CS1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC(CN2C=CN=C2)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=C(SC=C1)C#N");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(OCC2CC2)C=C1");
//        buildingBlocksBoronic.add("COCCOC1=CC(=CC=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=C(C=CC=C2N1)C#N");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=C(C=CC=C2N1)C#N");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=CC=C(C=C2N1)C#N");
//        buildingBlocksBoronic.add("COCCOC1=CC(=CC=C1C#N)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(CC2=CC=CC=C2)C(=O)C=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(N2CCC(=O)CC2)C(F)=C1");
//        buildingBlocksBoronic.add("CN1CCN(CC1)S(=O)(=O)C1=CC=C(C=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN1C=C2C(C=CC=C2B2OC(C)(C)C(C)(C)O2)=N1");
//        buildingBlocksBoronic.add("OB(O)C1=CC(F)=CC=C1OCC1CCCO1");
//        buildingBlocksBoronic.add("COCC1=CC=C(S1)B(O)O");
//        buildingBlocksBoronic.add("CN1N=CC=C1C1=CC(=CC=C1)B(O)O");
//        buildingBlocksBoronic.add("COC1=CC=C(B(O)O)C2=C1C=CC=C2");
//        buildingBlocksBoronic.add("COC1=CC(=CC=C1B(O)O)C#N");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(CN2CCOCC2)N=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CC(=C1)C(F)(F)F)C#N");
//        buildingBlocksBoronic.add("CN1C(=CC=C1B(O)O)C#N");
//        buildingBlocksBoronic.add("COC1=CC(=CC(=C1)C#N)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=CN=CC=C1B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(=C1)C1(CC1)C#N");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(CCC#N)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(CC#N)C(F)=C1");
//        buildingBlocksBoronic.add("CC1=CC(=CC=C1B(O)O)S(=O)(=O)N1CCCCC1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(CCC#N)C=C1");
//        buildingBlocksBoronic.add("CC1=CC(=CC(=C1)C#N)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COC1=CC(=CC=C1C#N)B(O)O");
//        buildingBlocksBoronic.add("CC1=C(C=CO1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN(N=C1)C1CC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC=C1CC#N");
//        buildingBlocksBoronic.add("CC1=CC=C(S1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC2=C1C=CC=N2");
//        buildingBlocksBoronic.add("CCC1=CC=CC=C1B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2C=C(NS(C)(=O)=O)C=CC2=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=C(C=CS1)C1=CC=CC=C1");
//        buildingBlocksBoronic.add("CC(C)OC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(C=C1)C(=O)NCCC#N");
//        buildingBlocksBoronic.add("CC(C)COC1=CC(=CC=C1C#N)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(OCCO)C=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC(=CC=C1F)C1(CCCCC1)C#N");
//        buildingBlocksBoronic.add("CC(C)COC1=CC(F)=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CN1C=NC2=C1C(=CC(=C2)C#N)B(O)O");
//        buildingBlocksBoronic.add("CC(C)COC1=NC=C(C)C=C1B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC=C1");
//        buildingBlocksBoronic.add("COC1=CC=C(C=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(=C1)C(O)=O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(=C1)C#N");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(C=O)=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CN=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CS1");
//        buildingBlocksBoronic.add("OB(O)C1CCCC1");
//        buildingBlocksBoronic.add("OB(O)C1=CN=CN=C1");
//        buildingBlocksBoronic.add("CC1=CC=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC=C1F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC(OC(F)(F)F)=C1");
//        buildingBlocksBoronic.add("CC1=CC=C(C=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=CC=C(C=C1CO)B(O)O");
//        buildingBlocksBoronic.add("CNC(=O)C1=CC(F)=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1=CC(CO)=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CNS(=O)(=O)C1=CC=C(F)C=C1B(O)O");
//        buildingBlocksBoronic.add("OCC1=CN=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("OCC1=CC=C(F)C(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1CCC(=CC1)B(O)O");
//        buildingBlocksBoronic.add("OCC1=CC(F)=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C2C=NNC2=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC(=C1)C#N");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CNC1=O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C2C=COC2=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC(F)=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(F)C=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)C#N");
//        buildingBlocksBoronic.add("OCC1=CC(=CC=N1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC(O)=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC2=CC=CC=C12");
//        buildingBlocksBoronic.add("CC1=CC=CC=C1B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC=C1C#N");
//        buildingBlocksBoronic.add("OB(O)\\C=C\\C1=CC=CC(F)=C1");
//        buildingBlocksBoronic.add("COC1=CC=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COC1=NC=CC=C1B(O)O");
//        buildingBlocksBoronic.add("OCC1=CC(=CC=C1F)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CN=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC(OCC2=CC=CC=C2)=C1");
//        buildingBlocksBoronic.add("CC(C)COC1=CC=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC(C)OC1=CC=CC(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1=CC=C(B(O)O)C(O)=C1");
//        buildingBlocksBoronic.add("CC1=CC=C(B(O)O)C(O)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C=C");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC2=C1C=CN2");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=CN=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(OC(F)(F)F)C=C1");
//        buildingBlocksBoronic.add("COC1=CC=CC=C1B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(C=C1)C(F)(F)F");
//        buildingBlocksBoronic.add("CC(=C)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CCCCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(F)C(F)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC=C1OC(F)(F)F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC(=C1)C(F)(F)F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC=C1C(F)(F)F");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CN=CS1");
//        buildingBlocksBoronic.add("OB(O)C1=CCCC1");
//        buildingBlocksBoronic.add("OB(O)C(=C)C1=CC=CC=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CNN=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CCOCC1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=NC=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2NC=CC2=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(O)C=C1");
//        buildingBlocksBoronic.add("COC1=CC=C(C=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2OCOC2=C1");
//        buildingBlocksBoronic.add("CN1C=C(C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(=O)OC1=CC=CC=C1B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CN(C)C1=CC=C(C=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC=C1Cl");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(Cl)C=C1");
//        buildingBlocksBoronic.add("CC1=CC(=CC=C1Cl)B(O)O");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C(Cl)C(=C1)C#N");
//        buildingBlocksBoronic.add("CC1=CC=C(Cl)C(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=CC(Cl)=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CN=C(Cl)C(F)=C1");
//        buildingBlocksBoronic.add("COCOC1=C(Cl)C=CC=C1B(O)O");
//        buildingBlocksBoronic.add("OCC1=CC=C(Cl)C(=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(Cl)=CC(CO)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC(Cl)=CC(Cl)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(Cl)C(Cl)=C1");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(F)C(Cl)=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=CC=C1OC1=CC=CC(F)=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CCC2=CC=CC=C12");
//        buildingBlocksBoronic.add("CC1=NNC2=C1C=C(B1OC(C)(C)C(C)(C)O1)C(F)=C2");
//        buildingBlocksBoronic.add("CN(C1=CC=CC(=C1)B1OC(C)(C)C(C)(C)O1)S(C)(=O)=O");
//        buildingBlocksBoronic.add("NC1=CC(=CC=C1Cl)B(O)O");
//        buildingBlocksBoronic.add("NC1=CC(=CC=C1Cl)B(O)O");
//        buildingBlocksBoronic.add("CC1=C(C=C(NC(=O)NCCC(C)(C)C)C(F)=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1=C(C=C(NC(=O)C2=CC=CC(=C2)C(F)(F)F)C=N1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("COC(=O)C1=C(C)C=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1CN(CC=C1B1OC(C)(C)C(C)(C)O1)C(=O)OC(C)(C)C");
//        buildingBlocksBoronic.add("C[C@H]1CN(CCN1C1=CN=C(NC2=CC(=CN(C)C2=O)B2OC(C)(C)C(C)(C)O2)C=C1)C(=O)OC(C)(C)C");
//        buildingBlocksBoronic.add("CN1C=C(C=C(NC2=NN3CCN(CC3=C2)C(=O)OC(C)(C)C)C1=O)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC1(C)OB(CBr)OC1(C)C");
//        buildingBlocksBoronic.add("CC(C)(C)OC(=O)N1CCC2(CC1)C(=O)N(C1CC(=O)C1)C1=C2C=CC(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("CC(C)NC1=CC(=NC=C1B(O)O)C1=CC=C2C=C(C=NN12)C#N");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C2C=C(C=NN12)C#N");
//        buildingBlocksBoronic.add("CNC1=CC(=NC=C1B(O)O)C1=CC=C2C=C(C=NN12)C#N");
//        buildingBlocksBoronic.add("COC(=O)C1=NN(COCC[Si](C)(C)C)C(=C1)B1OC(C)(C)C(C)(C)O1");
//        buildingBlocksBoronic.add("OB(O)C1=CC=C2C=C(C=NN12)C#N");
//        buildingBlocksBoronic.add("CCOC1=C(F)C(=CC=C1)B(O)O");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC2=C(CC(=O)N2)C=C1");
//        buildingBlocksBoronic.add("OB(O)C1=CN=C(C=C1NC1CCOCC1)C1=CC=C2C=C(C=NN12)C#N");
//        buildingBlocksBoronic.add("CC1(C)OB(OC1(C)C)C1=CC=C(OCC2=CC=CC=C2)N=C1OCC1=CC=CC=C1");
//
//        var boronicPattern = "OB(O)";
//
//
//        HashMap<String, Boolean> resultsBoronic = new HashMap<>();
//
//        buildingBlocksBoronic.stream().forEach(smiles -> resultsBoronic.put(smiles, doesPatternExistInSMILES(smiles, boronicPattern)));
//
//        var buildingBlocksNotFoundBoronic = buildingBlocksBoronic.stream().filter(buildingBlock -> !resultsBoronic.get(buildingBlock)).collect(Collectors.toList());
//
//        System.out.println(buildingBlocksNotFoundBoronic);
//
//
//
//        ArrayList<String> buildingBlocksEsterAndHalide = new ArrayList<>();
//
//        buildingBlocksEsterAndHalide.add("COC(=O)CN1C2=CC=CC=C2OCC(N)C1=O");
//        buildingBlocksEsterAndHalide.add("COC(=O)CN1C=CC=C(N)C1=O");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C2OCC(N)C(=O)NC2=CC=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CN=C(CN)S1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CN=C(CN)S1");
//        buildingBlocksEsterAndHalide.add("OC(=O)C1=CC(=CC=C1)C1=CC=C(S1)C=O");
//        buildingBlocksEsterAndHalide.add("OC(=O)C1=CC=C(C=C1)N1C=CC=C1C=O");
//        buildingBlocksEsterAndHalide.add("OC(=O)CNS(=O)(=O)C1=CC=C(C=O)C=C1");
//        buildingBlocksEsterAndHalide.add("OC(=O)C1=CC=C(O)C(C=O)=C1");
//        buildingBlocksEsterAndHalide.add("OC(=O)C1=CC=CC(=C1)C1=CC=C(C=O)C=C1");
//        buildingBlocksEsterAndHalide.add("COC1=CC=C(C=O)C=C1C(O)=O");
//        buildingBlocksEsterAndHalide.add("COC1=C(OCC(O)=O)C(Br)=CC(C=O)=C1");
//        buildingBlocksEsterAndHalide.add("COC1=C(OC(C)C(O)=O)C(Cl)=CC(C=O)=C1");
//        buildingBlocksEsterAndHalide.add("OC(=O)C1=CC=C(C=O)C=C1F");
//        buildingBlocksEsterAndHalide.add("OC(=O)C1=CC=C(S1)C=O");
//        buildingBlocksEsterAndHalide.add("OC(=O)COC1=CC=CC(C=O)=C1");
//        buildingBlocksEsterAndHalide.add("OC(=O)C1=CC=CC(C=O)=C1");
//        buildingBlocksEsterAndHalide.add("OC(=O)C1=CC=C(N1)C=O");
//        buildingBlocksEsterAndHalide.add("OC(=O)C1=CC(C=O)=CC=C1OCC1=CC=CC=C1");
//        buildingBlocksEsterAndHalide.add("OC(=O)C1=CC=C(F)C(C=O)=C1");
//        buildingBlocksEsterAndHalide.add("OC(=O)C1=CC=CC(=C1)C1=CC=CC(C=O)=C1");
//        buildingBlocksEsterAndHalide.add("OC(=O)C1=CC=C(C=O)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CN1C=C(CN)N=N1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CN");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CNC(=O)C(N)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CCC1=NC2=C(C=CC(O[C@H]3CC[C@@H](N)C3)=C2)N1C");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(Br)=CC(NC(=O)N2CCC[C@@H](N)C2)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(Br)=CC(NC(=O)N2CCC[C@@H](N)C2)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(Br)=CC(NC(=O)N2CC[C@@H](N)C2)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(Br)=CC(NC(=O)N2CC[C@@H](N)C2)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CN1C2=CC=CC(Br)=C2OCC(N)C1=O");
//        buildingBlocksEsterAndHalide.add("COC(=O)CN1C2=CC=CC(Br)=C2OCC(N)C1=O");
//        buildingBlocksEsterAndHalide.add("CN1C(CCC(O)=O)=NC2=CC=C(O[C@@H]3CC[C@H](N)C3)C=C12");
//        buildingBlocksEsterAndHalide.add("CN1C(CCC(O)=O)=NC2=CC=C(O[C@@H]3CC[C@H](N)C3)C=C12");
//        buildingBlocksEsterAndHalide.add("CN1C(CCC(O)=O)=NC2=CC=CC(O[C@H]3CC[C@@H](N)C3)=C12");
//        buildingBlocksEsterAndHalide.add("CN1C(CCC(O)=O)=NC2=CC=CC(O[C@H]3CC[C@@H](N)C3)=C12");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=NC=C(CN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=NC=C(CN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CN=C(CN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CN=C(CN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(C)C(C)=CC(N)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)[C@H]1C[C@H](N)C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)[C@H]1C[C@H](N)C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC=C(CCN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC=C(CCN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(N=C(CN)C=C1)C1CC1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(N=C(CN)C=C1)C1CC1");
//        buildingBlocksEsterAndHalide.add("COC(=O)[C@@H](O)CN");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)CN1C=CC2=C1C=CC(N)=C2");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)CN1C=CC2=C1C=CC(N)=C2");
//        buildingBlocksEsterAndHalide.add("COC(=O)COC1=CC(CN)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)COC1=CC(CN)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1CC2(CC(N)C2)C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1CC2(CC(N)C2)C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CNC(=O)C1=CC=C(CN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CNC(=O)C1=CC=C(CN)C=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=NN(C=C1)C1=CC(CN)=CC=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=NN(C=C1)C1=CC(CN)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(OC)C=C(CN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(OC)C=C(CN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=COC(CN)=N1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=COC(CN)=N1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CNC(=O)C1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC=C(CN)S1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC=C(CN)S1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(CN)OC1=CC=C(Br)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(CN)OC1=CC=C(Br)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC=C(OCCN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC=C(OCCN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CN1C=NC2=C(C=C(N)C=C2)C1=O");
//        buildingBlocksEsterAndHalide.add("COC(=O)COC1=CC(C)=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(C)C=C(C)C(N)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1CCCCN1C(=O)C1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CCC(N)C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CCC(N)C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1(CN)CCCC1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(CN)CC1=CC=C(C)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(CN)CC1=CC(C)=CC=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=C(C)N=C(S1)C1=CC(CN)=CC=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=C(C)N=C(S1)C1=CC(CN)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(=NC=C1)N1CCC(N)CC1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(=NC=C1)N1CCC(N)CC1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(C)CN");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC2=C(CCCC2CN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC2=C(CCCC2CN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CC(C)N");
//        buildingBlocksEsterAndHalide.add("COC(=O)CCC1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CCC1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1(CN)CC(C1)C1=CC=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(CN)C1CCOCC1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CN(CCN)C=N1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CN(CCN)C=N1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CN1CCCC(CN)C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)COC1=C(Cl)C=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)COC1=C(Cl)C=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CCC1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CCC1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)COC1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)COC1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CC(N)C1CC1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CC(N)C1CC1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CN1C=CC(N)=N1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC2=C(NC(CN)=N2)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC2=C(NC(CN)=N2)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CCOC1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CCOC1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CN(CCN)N=N1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CN(CCN)N=N1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=C(C)N(N=C1)C1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=NN(C=C1)C1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(CN)CC1=CC2=C(C=CC=C2)C=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=C(CN)C2=C(O1)C=CC=C2");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CC=C(CN)O1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CC=C(CN)O1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(Br)C=CC(N)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CN(N=N1)C1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(N)C=CC(C)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1(CN)CCCCC1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(F)C=C(F)C(N)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(CN)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(CN)=CC=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)CN1N=CC2=C1C=C(N)C=C2");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(F)C=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(Cl)=CC(N)=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1CCN(CC1)C(=O)C1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)CCN");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)CCN");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CSC(CN)=N1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CSC(CN)=N1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1(N)CCC1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CC1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CC(N)C1=CC=CS1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(OC)=C(CCN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(OC)=C(CCN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(OC)C=CC(CN)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(OC)C=CC(CN)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(C)OC1=C(C)C=CC(N)=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)CC(N)C1=CC=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)COC1=C2C=CC=CC2=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)COC1=C2C=CC=CC2=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(C)C(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=C(Cl)C=CC(N)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(N)C1=CC=CS1");
//        buildingBlocksEsterAndHalide.add("COCC1=CC(=CC(N)=C1)C(=O)OC");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(C)OC(CN)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(C)OC(CN)=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)[C@H](N)C1=CC=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(Cl)C=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1(CN)CCC1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CNS(=O)(=O)C1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC=C(CN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC=C(CN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CC1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(N)C=CC(F)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=NNC(=C1)C1=C(CN)C=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=NNC(=C1)C1=C(CN)C=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(CN)CC1CC1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(C)C=CC(N)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(C)C=CC(N)=C1");
//        buildingBlocksEsterAndHalide.add("CCC1=C(N)C=C(C=C1)C(=O)OC");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=C(C)N(N=C1)C1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C2C=CNC2=CC(N)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C2C=CNC2=CC(N)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)[C@H](N)CC1=CNC2=C1C=CC=C2");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)CC1=CC(Cl)=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC2=C(O1)C=CC(N)=C2");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(N)=C(C)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(C)C(N)=CC(Br)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(F)C=CC(N)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(Br)C=C(C)C(N)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(Br)C=C(C)C(N)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(N)=C(OC(C)C)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(N)=C(OC(C)C)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(N)=C(C)S1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(N)=C(C)S1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CC(N)C1=CC=C(OC)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(CN)CC1=CC(F)=C(F)C(F)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)[C@@H]1CCC[C@@H]1N");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(N)=C(F)C=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)CN1N=C(C)C(CN)=C1C");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)CN1N=C(C)C(CN)=C1C");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CSC(CCN)=N1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CSC(CCN)=N1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1(CN)CC1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CC(N)=C(C)N=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1CCN(CCCN)CC1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1CCN(CCCN)CC1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(C)C1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(C)C1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)CN1C=CC=C(N)C1=O");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)CN1C=CC=C(N)C1=O");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CN=C(C=C1)N1CC(N)C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CN=C(C=C1)N1CC(N)C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CN1N=C(C)C(CN)=C1C");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(CCN)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(CCN)=CC=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)CC1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(CN)C(=O)OC");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(Br)=C(CN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CC(Br)=C(CN)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(C)C1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(C)C1=CC=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)[C@@H]1C[C@H](N)C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)[C@@H]1C[C@H](N)C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)COC1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)COC1=CC(N)=CC=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CSC(=N1)C(C)N");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=CSC(=N1)C(C)N");
//        buildingBlocksEsterAndHalide.add("COC(=O)CC1=CC=C(CN)S1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CC1=CC=C(CN)S1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C(N)C1=CC=CC=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=NNC(N)=C1");
//        buildingBlocksEsterAndHalide.add("COC(=O)C1=C(CN)C=CO1");
//        buildingBlocksEsterAndHalide.add("COC(=O)CC1=C(F)C=C(N)C=C1");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)C1=CN(C)N=C1N");
//        buildingBlocksEsterAndHalide.add("CCOC(=O)[C@@H](N)CC1=CNC=N1");
//
//
//
//
//        var methylEsterPattern = "O=COC";
//
//
//        HashMap<String, Boolean> resultsEthylEster = new HashMap<>();
//
//        buildingBlocksEsterAndHalide.stream().forEach(smiles -> resultsEthylEster.put(smiles, doesPatternExistInSMILES(smiles, methylEsterPattern)));
//
//        var buildingBlocksNotFoundEster = buildingBlocksEsterAndHalide.stream().filter(buildingBlock -> !resultsEthylEster.get(buildingBlock)).collect(Collectors.toList());
//
//
//
//        var halidePattern = "Br";
//
//        HashMap<String, Boolean> resultsHalide = new HashMap<>();
//
//        buildingBlocksEsterAndHalide.stream().forEach(smiles -> resultsHalide.put(smiles, doesPatternExistInSMILES(smiles, halidePattern)));
//
//        var buildingBlocksNotFoundHalide = buildingBlocksEsterAndHalide.stream().filter(buildingBlock -> !resultsHalide.get(buildingBlock)).collect(Collectors.toList());
//        var buildingBlocksFoundFoundHalide = buildingBlocksEsterAndHalide.stream().filter(buildingBlock -> resultsHalide.get(buildingBlock)).collect(Collectors.toList());
